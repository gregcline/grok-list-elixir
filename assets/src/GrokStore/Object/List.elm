-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GrokStore.Object.List exposing (id, items, title, users)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import GrokStore.InputObject
import GrokStore.Interface
import GrokStore.Object
import GrokStore.Scalar
import GrokStore.ScalarCodecs
import GrokStore.Union
import Json.Decode as Decode


id : SelectionSet (Maybe GrokStore.ScalarCodecs.Id) GrokStore.Object.List
id =
    Object.selectionForField "(Maybe ScalarCodecs.Id)" "id" [] (GrokStore.ScalarCodecs.codecs |> GrokStore.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


items : SelectionSet decodesTo GrokStore.Object.Item -> SelectionSet (Maybe (List (Maybe decodesTo))) GrokStore.Object.List
items object_ =
    Object.selectionForCompositeField "items" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


title : SelectionSet (Maybe String) GrokStore.Object.List
title =
    Object.selectionForField "(Maybe String)" "title" [] (Decode.string |> Decode.nullable)


users : SelectionSet decodesTo GrokStore.Object.User -> SelectionSet (Maybe (List (Maybe decodesTo))) GrokStore.Object.List
users object_ =
    Object.selectionForCompositeField "users" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
